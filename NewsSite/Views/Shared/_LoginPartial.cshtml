@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav ml-auto">
    @if (!SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <form class="form-inline">
                <button class="btn btn-primary custom-btn btn-sm mr-1" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-lock"></i> Вход</button>
                <button class="btn btn-success btn-sm mr-1" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-tasks"></i> Регистрация</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item dropdown">
            <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @User.Identity.Name.ToUpper()
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                @if (User.IsInRole("Administrator"))
                {
                    <a class="dropdown-item" href="#"><i class="fas fa-crown"></i> Администрация</a>
                }
                else if (User.IsInRole("Editor"))
                {
                    <a class="dropdown-item" href="#"><i class="fas fa-pen-fancy"></i> Редакция</a>
                }
                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index"><i class="fa fa-user-circle" aria-hidden="true"></i> Профил</a>
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button class="dropdown-item" type="submit"><i class="fas fa-sign-out-alt"></i> Изход</button>
                </form>
            </div>
        </li>
    }
</ul>